<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyUrl>http://127.0.0.1:8080</SpaProxyUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="JsonFlatFileDataStore" Version="2.3.0" />
    <PackageReference Include="PacketDotNet" Version="1.4.6" />
    <PackageReference Include="PhotonPackageParser" Version="4.1.0" />
    <PackageReference Include="Proggmatic.SpaServices.VueCli" Version="6.0.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="6.0.1" />
    <PackageReference Include="SharpPcap" Version="6.2.2" />
  </ItemGroup>
  
  <ItemGroup>
    <!-- Files not to show in IDE -->
    <None Remove="yarn.lock" />

    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Update="data.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
    
  <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="ClientApp\" Command="node -e &quot;console.log('NPM Installing dependencies...')&quot;" />
    <Exec WorkingDirectory="ClientApp\" Command="npm install --ignore-scripts" />
    <Exec WorkingDirectory="ClientApp\" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
